Index: app/src/test/java/zsp/erasmus/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/zsp/erasmus/ExampleUnitTest.java	(revision )
+++ app/src/test/java/zsp/erasmus/ExampleUnitTest.java	(revision )
@@ -0,0 +1,17 @@
+package zsp.erasmus;
+
+import org.junit.Test;
+
+import static org.junit.Assert.assertEquals;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/zsp/erasmus/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/zsp/erasmus/MainActivity.java	(revision )
+++ app/src/main/java/zsp/erasmus/MainActivity.java	(revision )
@@ -0,0 +1,42 @@
+package zsp.erasmus;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.view.View;
+import android.widget.Button;
+
+import java.io.IOException;
+
+
+public class MainActivity extends AppCompatActivity {
+    String urldb = "216.58.209.36";
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        Button login = (Button) findViewById(R.id.button);
+        Button sing = (Button) findViewById(R.id.button2);
+        Button tt = (Button) findViewById(R.id.button2);
+    }
+
+    public void conntectButt(View v) throws IOException {
+
+    }
+
+    public void loginClick(View v) {
+
+    }
+
+    public void signUp(View v) {
+        Intent in = new Intent(this, SingUp.class);
+        startActivity(in);
+
+    }
+
+    public void help(View v) {
+        Intent hel = new Intent(this, Help.class);
+        startActivity(hel);
+    }
+}
Index: app/src/androidTest/java/zsp/erasmus/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/zsp/erasmus/ExampleInstrumentedTest.java	(revision )
+++ app/src/androidTest/java/zsp/erasmus/ExampleInstrumentedTest.java	(revision )
@@ -0,0 +1,26 @@
+package zsp.erasmus;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.assertEquals;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("zsp.erasmus", appContext.getPackageName());
+    }
+}
Index: app/src/main/java/zsp/erasmus/SingUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/zsp/erasmus/SingUp.java	(revision )
+++ app/src/main/java/zsp/erasmus/SingUp.java	(revision )
@@ -0,0 +1,76 @@
+package zsp.erasmus;
+
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.Spinner;
+import android.widget.Switch;
+
+
+public class SingUp extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_sing_up);
+    }
+
+    public void onButton(View v) {
+        int bld = 0;
+        boolean correct = true;
+        EditText name = (EditText) findViewById(R.id.Name);
+        EditText surnam = (EditText) findViewById(R.id.Surname);
+        EditText email = (EditText) findViewById(R.id.Email);
+        EditText team = (EditText) findViewById(R.id.Team);
+        EditText passwd = (EditText) findViewById(R.id.passwd);
+        EditText passwdre = (EditText) findViewById(R.id.repasswd);
+        Spinner country = (Spinner) findViewById(R.id.countries);
+        Switch teacher = (Switch) findViewById(R.id.teacher);
+        String[] dane = new String[6];
+        dane[0] = name.getText().toString();
+        dane[1] = surnam.getText().toString();
+        dane[2] = email.getText().toString();
+        dane[3] = team.getText().toString();
+        dane[4] = passwd.getText().toString();
+        dane[5] = passwdre.getText().toString();
+        if (-1 == dane[2].indexOf('@')) {
+            correct = false;
+            email.setError("E-mail is not correct!");
+        }
+        for (int i = 0; i < 6; i++) {
+            if (dane[i].isEmpty()) {
+                bld++;
+                correct = false;
+                switch (i) {
+                    case 0:
+                        name.setError("This field is empty");
+                        break;
+                    case 1:
+                        surnam.setError("This field is empty");
+                        break;
+                    case 2:
+                        email.setError("This field is empty");
+                        break;
+                    case 3:
+                        team.setError("This field is empty");
+                        break;
+                    case 4:
+                        passwd.setError("This field is empty");
+                        break;
+                    case 5:
+                        passwdre.setError("This field is empty");
+                        break;
+
+                }
+            }
+        }
+        if (dane[4] != dane[5] && bld == 0) {
+            correct = false;
+            passwdre.setError("This password don't match");
+        }
+
+        int countrynumb = country.getBaseline();
+
+    }
+}
Index: app/src/main/java/zsp/erasmus/Help.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/zsp/erasmus/Help.java	(revision )
+++ app/src/main/java/zsp/erasmus/Help.java	(revision )
@@ -0,0 +1,36 @@
+package zsp.erasmus;
+
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.view.View;
+import android.widget.EditText;
+
+public class Help extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_help);
+    }
+
+    public void sent(View v) {
+        boolean dziala = true;
+        EditText problem = (EditText) findViewById(R.id.problem);
+        EditText tel = (EditText) findViewById(R.id.tel);
+        EditText emal = (EditText) findViewById(R.id.email);
+        String[] dane = new String[3];
+        dane[0] = problem.getText().toString();
+        dane[1] = tel.getText().toString();
+        dane[2] = emal.getText().toString();
+        if (dane[0].isEmpty()) {
+            problem.setError("This field cannot be empty!");
+            dziala = false;
+        }
+        if (dane[2].indexOf('@') != 1 || dane[2].isEmpty()) {
+            emal.setError("Email is not correct!");
+            dziala = false;
+
+        }
+
+    }
+}
